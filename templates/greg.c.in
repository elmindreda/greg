/* GREG — オープンジーエルエクステンションジェネレータ
 * Copyright © Camilla Berglund <dreda@dreda.org>
 *
 * This software is provided 'as-is', without any express or implied
 * warranty. In no event will the authors be held liable for any damages
 * arising from the use of this software.
 *
 * Permission is granted to anyone to use this software for any purpose,
 * including commercial applications, and to alter it and redistribute it
 * freely, subject to the following restrictions:
 *
 * 1. The origin of this software must not be misrepresented; you must not
 *    claim that you wrote the original software. If you use this software
 *    in a product, an acknowledgment in the product documentation would
 *    be appreciated but is not required.
 *
 * 2. Altered source versions must be plainly marked as such, and must not
 *    be misrepresented as being the original software.
 *
 * 3. This notice may not be removed or altered from any source
 *    distribution.
 */

#include <greg.h>

#if defined(_WIN32)
  #include <windows.h>
#elif defined(__linux__)
  #include <GL/glx.h>
#endif

@CMD_DEFINITIONS@

static int gregValidContext(void)
{
#if defined(_WIN32)
  if (!wglGetCurrentContext())
    return GL_FALSE;
#elif defined(__linux__)
  if (!glXGetCurrentContext())
    return GL_FALSE;
#endif

  return GL_TRUE;
}

int gregInit(void)
{
  if (!gregValidContext())
    return GL_FALSE;

@CMD_LOADERS@

  return GL_TRUE;
}

GREGglproc gregGetProcAddress(const char* name)
{
#if defined(_WIN32)
  return (GREGglproc) wglGetProcAddress(name);
#elif defined(__linux__)
  return (GREGglproc) glXGetProcAddress(name);
#endif
}

